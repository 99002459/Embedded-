
drivProject.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000418  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005c0  080005c8  000105c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005c0  080005c0  000105c8  2**0
                  CONTENTS
  4 .ARM          00000000  080005c0  080005c0  000105c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005c0  080005c8  000105c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005c0  080005c0  000105c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005c4  080005c4  000105c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000105c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080005c8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080005c8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000105c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000726  00000000  00000000  000105f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001ff  00000000  00000000  00010d1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a8  00000000  00000000  00010f20  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  00010fc8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001228  00000000  00000000  00011048  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000097e  00000000  00000000  00012270  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00004a3a  00000000  00000000  00012bee  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00017628  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  000176a4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080005a8 	.word	0x080005a8

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080005a8 	.word	0x080005a8

080001e8 <PeriClkCtrl>:
 *      Author: Training
 */
#include "stm32f407xx_gpio_driver.h"

void PeriClkCtrl(GPIO_REGDEF_t *pGPIOx, uint8_t EnOrDi)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi==ENABLE)
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d161      	bne.n	80002be <PeriClkCtrl+0xd6>
	{
		if(pGPIOx==GPIOA)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a33      	ldr	r2, [pc, #204]	; (80002cc <PeriClkCtrl+0xe4>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <PeriClkCtrl+0x28>
		{
			GPIOA_PCLCK_EN();
 8000202:	4b33      	ldr	r3, [pc, #204]	; (80002d0 <PeriClkCtrl+0xe8>)
 8000204:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8000206:	4a32      	ldr	r2, [pc, #200]	; (80002d0 <PeriClkCtrl+0xe8>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	63d3      	str	r3, [r2, #60]	; 0x3c
	}
	else
	{ //disable options
	}

}
 800020e:	e056      	b.n	80002be <PeriClkCtrl+0xd6>
		else if(pGPIOx==GPIOB)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a30      	ldr	r2, [pc, #192]	; (80002d4 <PeriClkCtrl+0xec>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <PeriClkCtrl+0x3e>
			GPIOB_PCLCK_EN();
 8000218:	4b2d      	ldr	r3, [pc, #180]	; (80002d0 <PeriClkCtrl+0xe8>)
 800021a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800021c:	4a2c      	ldr	r2, [pc, #176]	; (80002d0 <PeriClkCtrl+0xe8>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 8000224:	e04b      	b.n	80002be <PeriClkCtrl+0xd6>
		else if(pGPIOx==GPIOC)
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a2b      	ldr	r2, [pc, #172]	; (80002d8 <PeriClkCtrl+0xf0>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <PeriClkCtrl+0x54>
			GPIOC_PCLCK_EN();
 800022e:	4b28      	ldr	r3, [pc, #160]	; (80002d0 <PeriClkCtrl+0xe8>)
 8000230:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8000232:	4a27      	ldr	r2, [pc, #156]	; (80002d0 <PeriClkCtrl+0xe8>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 800023a:	e040      	b.n	80002be <PeriClkCtrl+0xd6>
		else if(pGPIOx==GPIOD)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a27      	ldr	r2, [pc, #156]	; (80002dc <PeriClkCtrl+0xf4>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <PeriClkCtrl+0x6a>
			GPIOD_PCLCK_EN();
 8000244:	4b22      	ldr	r3, [pc, #136]	; (80002d0 <PeriClkCtrl+0xe8>)
 8000246:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8000248:	4a21      	ldr	r2, [pc, #132]	; (80002d0 <PeriClkCtrl+0xe8>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 8000250:	e035      	b.n	80002be <PeriClkCtrl+0xd6>
		else if(pGPIOx==GPIOE)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a22      	ldr	r2, [pc, #136]	; (80002e0 <PeriClkCtrl+0xf8>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <PeriClkCtrl+0x80>
			GPIOE_PCLCK_EN();
 800025a:	4b1d      	ldr	r3, [pc, #116]	; (80002d0 <PeriClkCtrl+0xe8>)
 800025c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800025e:	4a1c      	ldr	r2, [pc, #112]	; (80002d0 <PeriClkCtrl+0xe8>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 8000266:	e02a      	b.n	80002be <PeriClkCtrl+0xd6>
		else if(pGPIOx==GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a1e      	ldr	r2, [pc, #120]	; (80002e4 <PeriClkCtrl+0xfc>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <PeriClkCtrl+0x96>
			GPIOF_PCLCK_EN();
 8000270:	4b17      	ldr	r3, [pc, #92]	; (80002d0 <PeriClkCtrl+0xe8>)
 8000272:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8000274:	4a16      	ldr	r2, [pc, #88]	; (80002d0 <PeriClkCtrl+0xe8>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 800027c:	e01f      	b.n	80002be <PeriClkCtrl+0xd6>
		else if(pGPIOx==GPIOG)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a19      	ldr	r2, [pc, #100]	; (80002e8 <PeriClkCtrl+0x100>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <PeriClkCtrl+0xac>
			GPIOG_PCLCK_EN();
 8000286:	4b12      	ldr	r3, [pc, #72]	; (80002d0 <PeriClkCtrl+0xe8>)
 8000288:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800028a:	4a11      	ldr	r2, [pc, #68]	; (80002d0 <PeriClkCtrl+0xe8>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 8000292:	e014      	b.n	80002be <PeriClkCtrl+0xd6>
		else if(pGPIOx==GPIOH)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a15      	ldr	r2, [pc, #84]	; (80002ec <PeriClkCtrl+0x104>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <PeriClkCtrl+0xc2>
			GPIOH_PCLCK_EN();
 800029c:	4b0c      	ldr	r3, [pc, #48]	; (80002d0 <PeriClkCtrl+0xe8>)
 800029e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80002a0:	4a0b      	ldr	r2, [pc, #44]	; (80002d0 <PeriClkCtrl+0xe8>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 80002a8:	e009      	b.n	80002be <PeriClkCtrl+0xd6>
		else if(pGPIOx==GPIOI)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a10      	ldr	r2, [pc, #64]	; (80002f0 <PeriClkCtrl+0x108>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d105      	bne.n	80002be <PeriClkCtrl+0xd6>
			GPIOI_PCLCK_EN();
 80002b2:	4b07      	ldr	r3, [pc, #28]	; (80002d0 <PeriClkCtrl+0xe8>)
 80002b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80002b6:	4a06      	ldr	r2, [pc, #24]	; (80002d0 <PeriClkCtrl+0xe8>)
 80002b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002bc:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 80002be:	bf00      	nop
 80002c0:	370c      	adds	r7, #12
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	40020000 	.word	0x40020000
 80002d0:	40023800 	.word	0x40023800
 80002d4:	40020400 	.word	0x40020400
 80002d8:	40020800 	.word	0x40020800
 80002dc:	40020c00 	.word	0x40020c00
 80002e0:	40021000 	.word	0x40021000
 80002e4:	40021400 	.word	0x40021400
 80002e8:	40021800 	.word	0x40021800
 80002ec:	40021c00 	.word	0x40021c00
 80002f0:	40022000 	.word	0x40022000

080002f4 <GPIO_init>:

void GPIO_init(GPIO_Handle_t *GPIO_Handle)
{
 80002f4:	b480      	push	{r7}
 80002f6:	b085      	sub	sp, #20
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	6078      	str	r0, [r7, #4]
	//Init Mode
	uint32_t temp=0;
 80002fc:	2300      	movs	r3, #0
 80002fe:	60fb      	str	r3, [r7, #12]
	temp=GPIO_Handle->GPIO_PinConfig.GPIO_PinMode<<(2*GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	795b      	ldrb	r3, [r3, #5]
 8000304:	461a      	mov	r2, r3
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	791b      	ldrb	r3, [r3, #4]
 800030a:	005b      	lsls	r3, r3, #1
 800030c:	fa02 f303 	lsl.w	r3, r2, r3
 8000310:	60fb      	str	r3, [r7, #12]
	(GPIO_Handle->pGPIOx->MODER) &=~(0x3<<GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	681a      	ldr	r2, [r3, #0]
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	791b      	ldrb	r3, [r3, #4]
 800031c:	4619      	mov	r1, r3
 800031e:	2303      	movs	r3, #3
 8000320:	408b      	lsls	r3, r1
 8000322:	43db      	mvns	r3, r3
 8000324:	4619      	mov	r1, r3
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	400a      	ands	r2, r1
 800032c:	601a      	str	r2, [r3, #0]
	(GPIO_Handle->pGPIOx->MODER) |=temp;
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	6819      	ldr	r1, [r3, #0]
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	68fa      	ldr	r2, [r7, #12]
 800033a:	430a      	orrs	r2, r1
 800033c:	601a      	str	r2, [r3, #0]


	//Config speed
    temp=0;
 800033e:	2300      	movs	r3, #0
 8000340:	60fb      	str	r3, [r7, #12]
    temp=(GPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed<<(2*GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	799b      	ldrb	r3, [r3, #6]
 8000346:	461a      	mov	r2, r3
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	791b      	ldrb	r3, [r3, #4]
 800034c:	005b      	lsls	r3, r3, #1
 800034e:	fa02 f303 	lsl.w	r3, r2, r3
 8000352:	60fb      	str	r3, [r7, #12]
    (GPIO_Handle->pGPIOx->OSPEEDR) &=~(0x3<<GPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed);
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	689a      	ldr	r2, [r3, #8]
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	799b      	ldrb	r3, [r3, #6]
 800035e:	4619      	mov	r1, r3
 8000360:	2303      	movs	r3, #3
 8000362:	408b      	lsls	r3, r1
 8000364:	43db      	mvns	r3, r3
 8000366:	4619      	mov	r1, r3
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	400a      	ands	r2, r1
 800036e:	609a      	str	r2, [r3, #8]
    (GPIO_Handle->pGPIOx->OSPEEDR) |=temp;
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	6899      	ldr	r1, [r3, #8]
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	68fa      	ldr	r2, [r7, #12]
 800037c:	430a      	orrs	r2, r1
 800037e:	609a      	str	r2, [r3, #8]

	//config pull up or pull down
    temp=0;
 8000380:	2300      	movs	r3, #0
 8000382:	60fb      	str	r3, [r7, #12]
    temp=(GPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdControl<<(2*GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	7a1b      	ldrb	r3, [r3, #8]
 8000388:	461a      	mov	r2, r3
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	791b      	ldrb	r3, [r3, #4]
 800038e:	005b      	lsls	r3, r3, #1
 8000390:	fa02 f303 	lsl.w	r3, r2, r3
 8000394:	60fb      	str	r3, [r7, #12]
    (GPIO_Handle->pGPIOx->PUPDR) &=~(0x3<<GPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdControl);
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	68da      	ldr	r2, [r3, #12]
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	7a1b      	ldrb	r3, [r3, #8]
 80003a0:	4619      	mov	r1, r3
 80003a2:	2303      	movs	r3, #3
 80003a4:	408b      	lsls	r3, r1
 80003a6:	43db      	mvns	r3, r3
 80003a8:	4619      	mov	r1, r3
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	400a      	ands	r2, r1
 80003b0:	60da      	str	r2, [r3, #12]
    GPIO_Handle->pGPIOx->PUPDR |=temp;
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	68d9      	ldr	r1, [r3, #12]
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	68fa      	ldr	r2, [r7, #12]
 80003be:	430a      	orrs	r2, r1
 80003c0:	60da      	str	r2, [r3, #12]

    //config o/p type
    temp=0;
 80003c2:	2300      	movs	r3, #0
 80003c4:	60fb      	str	r3, [r7, #12]
    temp=(GPIO_Handle->GPIO_PinConfig.GPIO_PinOPType<<(GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	79db      	ldrb	r3, [r3, #7]
 80003ca:	461a      	mov	r2, r3
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	791b      	ldrb	r3, [r3, #4]
 80003d0:	fa02 f303 	lsl.w	r3, r2, r3
 80003d4:	60fb      	str	r3, [r7, #12]
    (GPIO_Handle->pGPIOx->OTYPER) &=~(0x1<<GPIO_Handle->GPIO_PinConfig.GPIO_PinOPType);
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	685a      	ldr	r2, [r3, #4]
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	79db      	ldrb	r3, [r3, #7]
 80003e0:	4619      	mov	r1, r3
 80003e2:	2301      	movs	r3, #1
 80003e4:	408b      	lsls	r3, r1
 80003e6:	43db      	mvns	r3, r3
 80003e8:	4619      	mov	r1, r3
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	400a      	ands	r2, r1
 80003f0:	605a      	str	r2, [r3, #4]
    GPIO_Handle->pGPIOx->OTYPER |=temp;
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	6859      	ldr	r1, [r3, #4]
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	68fa      	ldr	r2, [r7, #12]
 80003fe:	430a      	orrs	r2, r1
 8000400:	605a      	str	r2, [r3, #4]

    //config alt funct
    temp=0;
 8000402:	2300      	movs	r3, #0
 8000404:	60fb      	str	r3, [r7, #12]

    if(GPIO_Handle->GPIO_PinConfig.GPIO_PinMode==GPIO_Mode_AF)
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	795b      	ldrb	r3, [r3, #5]
 800040a:	2b02      	cmp	r3, #2
 800040c:	d12c      	bne.n	8000468 <GPIO_init+0x174>
    {
    	uint8_t temp1=0,temp2=0;
 800040e:	2300      	movs	r3, #0
 8000410:	72fb      	strb	r3, [r7, #11]
 8000412:	2300      	movs	r3, #0
 8000414:	72bb      	strb	r3, [r7, #10]
    	temp1=(GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)/8;
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	791b      	ldrb	r3, [r3, #4]
 800041a:	08db      	lsrs	r3, r3, #3
 800041c:	72fb      	strb	r3, [r7, #11]
    	temp2=(GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)%8;
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	791b      	ldrb	r3, [r3, #4]
 8000422:	f003 0307 	and.w	r3, r3, #7
 8000426:	72bb      	strb	r3, [r7, #10]
    	GPIO_Handle->pGPIOx->AFR[temp1] &=~(0xF<<temp2);
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	7afa      	ldrb	r2, [r7, #11]
 800042e:	3208      	adds	r2, #8
 8000430:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000434:	7abb      	ldrb	r3, [r7, #10]
 8000436:	220f      	movs	r2, #15
 8000438:	fa02 f303 	lsl.w	r3, r2, r3
 800043c:	43db      	mvns	r3, r3
 800043e:	4618      	mov	r0, r3
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	7afa      	ldrb	r2, [r7, #11]
 8000446:	4001      	ands	r1, r0
 8000448:	3208      	adds	r2, #8
 800044a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    	GPIO_Handle->pGPIOx->AFR[temp1]=(GPIO_Handle->GPIO_PinConfig.GPIO_PinAltFunMode<<(4*temp2));
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	7a5b      	ldrb	r3, [r3, #9]
 8000452:	461a      	mov	r2, r3
 8000454:	7abb      	ldrb	r3, [r7, #10]
 8000456:	009b      	lsls	r3, r3, #2
 8000458:	fa02 f103 	lsl.w	r1, r2, r3
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	7afa      	ldrb	r2, [r7, #11]
 8000462:	3208      	adds	r2, #8
 8000464:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    }
}
 8000468:	bf00      	nop
 800046a:	3714      	adds	r7, #20
 800046c:	46bd      	mov	sp, r7
 800046e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000472:	4770      	bx	lr

08000474 <GPIO_ToggleOpPin>:
void GPIO_WriteToOpPort(GPIO_REGDEF_t *pGPIOx, uint16_t value)
{
	pGPIOx->ODR=value;
}
void GPIO_ToggleOpPin(GPIO_REGDEF_t *pGPIOx, uint16_t PinNo)
{
 8000474:	b480      	push	{r7}
 8000476:	b083      	sub	sp, #12
 8000478:	af00      	add	r7, sp, #0
 800047a:	6078      	str	r0, [r7, #4]
 800047c:	460b      	mov	r3, r1
 800047e:	807b      	strh	r3, [r7, #2]
	pGPIOx->ODR ^=(1<<PinNo);
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	695b      	ldr	r3, [r3, #20]
 8000484:	887a      	ldrh	r2, [r7, #2]
 8000486:	2101      	movs	r1, #1
 8000488:	fa01 f202 	lsl.w	r2, r1, r2
 800048c:	405a      	eors	r2, r3
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	615a      	str	r2, [r3, #20]
}
 8000492:	bf00      	nop
 8000494:	370c      	adds	r7, #12
 8000496:	46bd      	mov	sp, r7
 8000498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049c:	4770      	bx	lr
	...

080004a0 <Delay>:
 */
#include "stm32f407xx.h"
#include "stm32f407xx_gpio_driver.h"

void Delay(void)
{
 80004a0:	b480      	push	{r7}
 80004a2:	b083      	sub	sp, #12
 80004a4:	af00      	add	r7, sp, #0
	for(uint32_t i=0;i<0xFFFFF;i++);
 80004a6:	2300      	movs	r3, #0
 80004a8:	607b      	str	r3, [r7, #4]
 80004aa:	e002      	b.n	80004b2 <Delay+0x12>
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	3301      	adds	r3, #1
 80004b0:	607b      	str	r3, [r7, #4]
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	4a04      	ldr	r2, [pc, #16]	; (80004c8 <Delay+0x28>)
 80004b6:	4293      	cmp	r3, r2
 80004b8:	d9f8      	bls.n	80004ac <Delay+0xc>
}
 80004ba:	bf00      	nop
 80004bc:	370c      	adds	r7, #12
 80004be:	46bd      	mov	sp, r7
 80004c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c4:	4770      	bx	lr
 80004c6:	bf00      	nop
 80004c8:	000ffffe 	.word	0x000ffffe

080004cc <main>:
int main(void)
{
 80004cc:	b580      	push	{r7, lr}
 80004ce:	b084      	sub	sp, #16
 80004d0:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLed;
	GPIOLed.pGPIOx=GPIOD;
 80004d2:	4b0d      	ldr	r3, [pc, #52]	; (8000508 <main+0x3c>)
 80004d4:	607b      	str	r3, [r7, #4]
	GPIOLed.GPIO_PinConfig.GPIO_PinNumber=GPIO_Pin_No_12;
 80004d6:	230c      	movs	r3, #12
 80004d8:	723b      	strb	r3, [r7, #8]
	GPIOLed.GPIO_PinConfig.GPIO_PinMode=GPIO_Mode_Out;
 80004da:	2301      	movs	r3, #1
 80004dc:	727b      	strb	r3, [r7, #9]
	GPIOLed.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 80004de:	2300      	movs	r3, #0
 80004e0:	72fb      	strb	r3, [r7, #11]
	GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD;
 80004e2:	2300      	movs	r3, #0
 80004e4:	733b      	strb	r3, [r7, #12]
	GPIOLed.GPIO_PinConfig.GPIO_PinSpeed=GPIO_Speed_VHigh;
 80004e6:	2303      	movs	r3, #3
 80004e8:	72bb      	strb	r3, [r7, #10]

	PeriClkCtrl(GPIOD,SET);
 80004ea:	2101      	movs	r1, #1
 80004ec:	4806      	ldr	r0, [pc, #24]	; (8000508 <main+0x3c>)
 80004ee:	f7ff fe7b 	bl	80001e8 <PeriClkCtrl>
	GPIO_init(&GPIOLed);
 80004f2:	1d3b      	adds	r3, r7, #4
 80004f4:	4618      	mov	r0, r3
 80004f6:	f7ff fefd 	bl	80002f4 <GPIO_init>
	while(1)
	{
		GPIO_ToggleOpPin(GPIOD, GPIO_Pin_No_12);
 80004fa:	210c      	movs	r1, #12
 80004fc:	4802      	ldr	r0, [pc, #8]	; (8000508 <main+0x3c>)
 80004fe:	f7ff ffb9 	bl	8000474 <GPIO_ToggleOpPin>
		Delay();
 8000502:	f7ff ffcd 	bl	80004a0 <Delay>
		GPIO_ToggleOpPin(GPIOD, GPIO_Pin_No_12);
 8000506:	e7f8      	b.n	80004fa <main+0x2e>
 8000508:	40020c00 	.word	0x40020c00

0800050c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800050c:	480d      	ldr	r0, [pc, #52]	; (8000544 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800050e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000510:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000514:	480c      	ldr	r0, [pc, #48]	; (8000548 <LoopForever+0x6>)
  ldr r1, =_edata
 8000516:	490d      	ldr	r1, [pc, #52]	; (800054c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000518:	4a0d      	ldr	r2, [pc, #52]	; (8000550 <LoopForever+0xe>)
  movs r3, #0
 800051a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800051c:	e002      	b.n	8000524 <LoopCopyDataInit>

0800051e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800051e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000520:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000522:	3304      	adds	r3, #4

08000524 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000524:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000526:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000528:	d3f9      	bcc.n	800051e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800052a:	4a0a      	ldr	r2, [pc, #40]	; (8000554 <LoopForever+0x12>)
  ldr r4, =_ebss
 800052c:	4c0a      	ldr	r4, [pc, #40]	; (8000558 <LoopForever+0x16>)
  movs r3, #0
 800052e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000530:	e001      	b.n	8000536 <LoopFillZerobss>

08000532 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000532:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000534:	3204      	adds	r2, #4

08000536 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000536:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000538:	d3fb      	bcc.n	8000532 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800053a:	f000 f811 	bl	8000560 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800053e:	f7ff ffc5 	bl	80004cc <main>

08000542 <LoopForever>:

LoopForever:
    b LoopForever
 8000542:	e7fe      	b.n	8000542 <LoopForever>
  ldr   r0, =_estack
 8000544:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000548:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800054c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000550:	080005c8 	.word	0x080005c8
  ldr r2, =_sbss
 8000554:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000558:	2000001c 	.word	0x2000001c

0800055c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800055c:	e7fe      	b.n	800055c <ADC_IRQHandler>
	...

08000560 <__libc_init_array>:
 8000560:	b570      	push	{r4, r5, r6, lr}
 8000562:	4e0d      	ldr	r6, [pc, #52]	; (8000598 <__libc_init_array+0x38>)
 8000564:	4c0d      	ldr	r4, [pc, #52]	; (800059c <__libc_init_array+0x3c>)
 8000566:	1ba4      	subs	r4, r4, r6
 8000568:	10a4      	asrs	r4, r4, #2
 800056a:	2500      	movs	r5, #0
 800056c:	42a5      	cmp	r5, r4
 800056e:	d109      	bne.n	8000584 <__libc_init_array+0x24>
 8000570:	4e0b      	ldr	r6, [pc, #44]	; (80005a0 <__libc_init_array+0x40>)
 8000572:	4c0c      	ldr	r4, [pc, #48]	; (80005a4 <__libc_init_array+0x44>)
 8000574:	f000 f818 	bl	80005a8 <_init>
 8000578:	1ba4      	subs	r4, r4, r6
 800057a:	10a4      	asrs	r4, r4, #2
 800057c:	2500      	movs	r5, #0
 800057e:	42a5      	cmp	r5, r4
 8000580:	d105      	bne.n	800058e <__libc_init_array+0x2e>
 8000582:	bd70      	pop	{r4, r5, r6, pc}
 8000584:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000588:	4798      	blx	r3
 800058a:	3501      	adds	r5, #1
 800058c:	e7ee      	b.n	800056c <__libc_init_array+0xc>
 800058e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000592:	4798      	blx	r3
 8000594:	3501      	adds	r5, #1
 8000596:	e7f2      	b.n	800057e <__libc_init_array+0x1e>
 8000598:	080005c0 	.word	0x080005c0
 800059c:	080005c0 	.word	0x080005c0
 80005a0:	080005c0 	.word	0x080005c0
 80005a4:	080005c4 	.word	0x080005c4

080005a8 <_init>:
 80005a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005aa:	bf00      	nop
 80005ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005ae:	bc08      	pop	{r3}
 80005b0:	469e      	mov	lr, r3
 80005b2:	4770      	bx	lr

080005b4 <_fini>:
 80005b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005b6:	bf00      	nop
 80005b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005ba:	bc08      	pop	{r3}
 80005bc:	469e      	mov	lr, r3
 80005be:	4770      	bx	lr
